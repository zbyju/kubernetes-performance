---
export interface Props {
	body: string;
	href?: string;
}

const { href, body } = Astro.props;

---

<div class="card">
	{ href === undefined ? <p class="link-card">{body}</p> : <a href={href} class="link-card"><p>{body}</p></a>}
	<div class="card-voting">
		<button class="up">Upvote</button>
		<button class="down">Downvote</button>
	</div>
</div>
<style>

	.card {
		list-style: none;
		padding-left: 15px;
		display: flex;
		background-color: white;
		border-radius: 0.5rem;
	}

	.card .card-voting {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}

	.card .card-voting button {
		width: 100%;
		height: 50%;
		border-radius: 5px;
		font-size: 1.0em;
		font-weight: 600;
		cursor: pointer;
		border: 0px;
		transition: 0.5s all;
	}

	.card .card-voting button.up {
		background-color: rgb(75, 214, 100);
		color: rgb(19, 69, 28);
	}
	.card .card-voting button.up:hover {
		background-color: rgb(64, 185, 86);
		color: rgb(11, 40, 17);
	}

	.card .card-voting button.down {
		background-color: rgb(231, 106, 125);
		color: rgb(87, 27, 36);
	}
	.card .card-voting button.down:hover {
		background-color: rgb(212, 97, 115);
		color: rgb(23, 7, 10);
	}

	.link-card {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		border-radius: 0.35rem;
		color: #111;
		background-color: white;
		opacity: 0.8;
		flex-grow: 1;
	}
	p {
		color: #222;
	}
	.link-card-link:is(:hover, :focus-within) {
		background-position: 0;
	}
	.link-card-link:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
</style>
